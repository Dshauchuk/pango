<abstract:PageBase
    x:Class="Pango.Desktop.Uwp.Views.PasswordsView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:controls="using:Pango.Desktop.Uwp.Controls"
    xmlns:attachedprops="using:Pango.Desktop.Uwp.Controls.AttachedProperties"
    xmlns:templateselectors="using:Pango.Desktop.Uwp.Controls.TemplateSelectors"
    xmlns:loc="using:Pango.Desktop.Uwp.Core.Localization"
    xmlns:viewmodels="using:Pango.Desktop.Uwp.ViewModels"
    xmlns:views="using:Pango.Desktop.Uwp.Views"
    xmlns:abstract="using:Pango.Desktop.Uwp.Views.Abstract"
    mc:Ignorable="d"
    d:DataContext="{d:DesignInstance Type=viewmodels:PasswordsViewModel}"
    d:DesignHeight="300"
    d:DesignWidth="400">
    <Page.Resources>
        <Style TargetType="TreeViewItem"
               BasedOn="{StaticResource ListViewItemRevealStyle}"
               x:Name="MUX_TreeViewItemStyle">
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Background" Value="{ThemeResource TreeViewItemBackground}"/>
            <Setter Property="BorderBrush" Value="{ThemeResource TreeViewItemBorderBrush}"/>
            <Setter Property="BorderThickness" Value="{ThemeResource TreeViewItemBorderThemeThickness}"/>
            <Setter Property="GlyphBrush" Value="{ThemeResource TreeViewItemForeground}"/>
            <Setter Property="MinHeight" Value="{ThemeResource TreeViewItemMinHeight}"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TreeViewItem">                        
                        <Grid x:Name="ContentPresenterGrid" Margin="0,0,0,0" 
                              Background="{TemplateBinding Background}" 
                              BorderBrush="{TemplateBinding BorderBrush}"
                              BorderThickness="{TemplateBinding BorderThickness}"
                              CornerRadius="{TemplateBinding CornerRadius}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="PointerOver">
                                        <VisualState.Setters>
                                            <!--<Setter Target="ContentPresenterGrid.(RevealBrush.State)" Value="PointerOver" />-->
                                            <Setter Target="ContentPresenterGrid.Background" Value="{ThemeResource TreeViewItemBackgroundPointerOver}" />
                                            <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TreeViewItemForegroundPointerOver}" />
                                            <Setter Target="ContentPresenterGrid.BorderBrush" Value="{ThemeResource TreeViewItemBorderBrushPointerOver}" />
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <VisualState.Setters>
                                            <!--<Setter Target="ContentPresenterGrid.(RevealBrush.State)" Value="Pressed" />-->
                                            <Setter Target="ContentPresenterGrid.Background" Value="{ThemeResource TreeViewItemBackgroundPressed}" />
                                            <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TreeViewItemForegroundPressed}" />
                                            <Setter Target="ContentPresenterGrid.BorderBrush" Value="{ThemeResource TreeViewItemBorderBrushPressed}" />
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="Selected">
                                        <VisualState.Setters>
                                            <Setter Target="ContentPresenterGrid.Background" Value="{ThemeResource TreeViewItemBackgroundSelected}" />
                                            <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TreeViewItemForegroundSelected}" />
                                            <Setter Target="ContentPresenterGrid.BorderBrush" Value="{ThemeResource TreeViewItemBorderBrushSelected}" />
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <VisualState.Setters>
                                            <Setter Target="ContentPresenterGrid.Background" Value="{ThemeResource TreeViewItemBackgroundDisabled}" />
                                            <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TreeViewItemForegroundDisabled}" />
                                            <Setter Target="ContentPresenterGrid.BorderBrush" Value="{ThemeResource TreeViewItemBorderBrushDisabled}" />
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="PointerOverSelected">
                                        <VisualState.Setters>
                                            <!--<Setter Target="ContentPresenterGrid.(RevealBrush.State)" Value="PointerOver" />-->
                                            <Setter Target="ContentPresenterGrid.Background" Value="{ThemeResource TreeViewItemBackgroundSelectedPointerOver}" />
                                            <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TreeViewItemForegroundSelectedPointerOver}" />
                                            <Setter Target="ContentPresenterGrid.BorderBrush" Value="{ThemeResource TreeViewItemBorderBrushSelectedPointerOver}" />
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="PressedSelected">
                                        <VisualState.Setters>
                                            <!--<Setter Target="ContentPresenterGrid.(RevealBrush.State)" Value="Pressed" />-->
                                            <Setter Target="ContentPresenterGrid.Background" Value="{ThemeResource TreeViewItemBackgroundSelectedPressed}" />
                                            <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TreeViewItemForegroundSelectedPressed}" />
                                            <Setter Target="ContentPresenterGrid.BorderBrush" Value="{ThemeResource TreeViewItemBorderBrushSelectedPressed}" />
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="SelectedDisabled">
                                        <VisualState.Setters>
                                            <Setter Target="ContentPresenterGrid.Background" Value="{ThemeResource TreeViewItemBackgroundSelectedDisabled}" />
                                            <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TreeViewItemForegroundSelectedDisabled}" />
                                            <Setter Target="ContentPresenterGrid.BorderBrush" Value="{ThemeResource TreeViewItemBorderBrushSelectedDisabled}" />
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="ReorderedPlaceholder">
                                        <Storyboard>
                                            <FadeOutThemeAnimation TargetName="MultiSelectGrid" />
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="TreeViewMultiSelectStates">
                                    <VisualState x:Name="TreeViewMultiSelectDisabled"/>
                                    <VisualState x:Name="TreeViewMultiSelectEnabledUnselected">
                                        <VisualState.Setters>
                                            <Setter Target="MultiSelectCheckBox.Visibility" Value="Visible" />
                                            <Setter Target="ExpandCollapseChevron.Padding" Value="0,0,12,0" />
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="TreeViewMultiSelectEnabledSelected">
                                        <VisualState.Setters>
                                            <Setter Target="MultiSelectCheckBox.Visibility" Value="Visible" />
                                            <Setter Target="MultiSelectGrid.Background" Value="{ThemeResource TreeViewItemBackgroundSelected}" />
                                            <Setter Target="ExpandCollapseChevron.Padding" Value="0,0,12,0" />
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="DragStates">
                                    <VisualState x:Name="NotDragging" />
                                    <VisualState x:Name="MultipleDraggingPrimary">
                                        <VisualState.Setters>
                                            <Setter Target="MultiSelectCheckBox.Opacity" Value="0" />
                                            <Setter Target="MultiArrangeOverlayTextBorder.Visibility" Value="Visible" />
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>

                            <Grid x:Name="MultiSelectGrid" Padding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TreeViewItemTemplateSettings.Indentation}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>

                                <Grid Grid.Column="0">
                                    <CheckBox x:Name="MultiSelectCheckBox"
                                              Width="32"
                                              MinWidth="32"
                                              Margin="12,0,0,0"
                                              VerticalAlignment="Center"
                                              Visibility="Collapsed"
                                              IsTabStop="False"
                                              AutomationProperties.AccessibilityView="Raw" />
                                    <Border x:Name="MultiArrangeOverlayTextBorder"
                                            Visibility="Collapsed"
                                            IsHitTestVisible="False"
                                            MinWidth="20"
                                            Height="20"
                                            VerticalAlignment="Center"
                                            HorizontalAlignment="Center"
                                            Background="{ThemeResource SystemControlBackgroundAccentBrush}"
                                            BorderThickness="1"
                                            BorderBrush="{ThemeResource SystemControlBackgroundChromeWhiteBrush}">
                                        <TextBlock x:Name="MultiArrangeOverlayText"
                                                   Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TreeViewItemTemplateSettings.DragItemsCount}"
                                                   Style="{ThemeResource CaptionTextBlockStyle}"
                                                   Foreground="{ThemeResource SystemControlForegroundChromeWhiteBrush}"
                                                   IsHitTestVisible="False"
                                                   VerticalAlignment="Center"
                                                   HorizontalAlignment="Center"
                                                   AutomationProperties.AccessibilityView="Raw" />
                                    </Border>
                                </Grid>

                                <Grid x:Name="ExpandCollapseChevron"
                                      Grid.Column="1"
                                      Padding="12,0,12,0"
                                      Width="Auto"
                                      Opacity="{TemplateBinding GlyphOpacity}"
                                      Background="Transparent">
                                    <TextBlock Foreground="{TemplateBinding GlyphBrush}"
                                               Width="12" Height="12"
                                               Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TreeViewItemTemplateSettings.CollapsedGlyphVisibility}" 
                                               FontSize="{TemplateBinding GlyphSize}" Text="{TemplateBinding CollapsedGlyph}"
                                               FontFamily="{StaticResource SymbolThemeFontFamily}"
                                               VerticalAlignment="Center"
                                               AutomationProperties.AccessibilityView="Raw"/>
                                    <TextBlock Foreground="{TemplateBinding GlyphBrush}"
                                               Width="12" Height="12"
                                               Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TreeViewItemTemplateSettings.ExpandedGlyphVisibility}" 
                                               FontSize="{TemplateBinding GlyphSize}"
                                               Text="{TemplateBinding ExpandedGlyph}"
                                               FontFamily="{StaticResource SymbolThemeFontFamily}"
                                               VerticalAlignment="Center"
                                               AutomationProperties.AccessibilityView="Raw"/>
                                </Grid>

                                <ContentPresenter x:Name="ContentPresenter"
                                                  Grid.Column="2"
                                                  ContentTransitions="{TemplateBinding ContentTransitions}"
                                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                                  Content="{TemplateBinding Content}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  Margin="{TemplateBinding Padding}" />
                            </Grid>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <DataTemplate x:Name="FolderTemplate">
            <TreeViewItem AutomationProperties.Name="{Binding Name}"
                          ItemsSource="{Binding Children}" IsExpanded="False" Visibility="{Binding IsVisible, Converter={StaticResource BoolToVisibilityConvereter}}">
                <TreeViewItem.ContextFlyout>
                    <MenuFlyout>
                        <MenuFlyoutItem x:Name="Edit_CatalogContextMenuItem" Text="{loc:StringResource Key=Edit}" Icon="Edit" Click="EditContextMenuItem_Click"/>
                        <MenuFlyoutItem x:Name="Delete_CatalogContextMenuItem" Text="{loc:StringResource Key=Delete}" Icon="Delete" Click="DeleteContextMenuItem_Click"/>
                        <MenuFlyoutSeparator/>
                        <MenuFlyoutItem x:Name="AddPassword_CatalogContextMenuItem" Text="{loc:StringResource Key=AddPassword}" Icon="Add" Click="AddPassword_CatalogContextMenuItem_Click"/>
                        <MenuFlyoutItem x:Name="AddCatalog_CatalogContextMenuItem" Text="{loc:StringResource Key=AddNewCatalog}" Icon="NewFolder" Click="AddCatalog_CatalogContextMenuItem_Click"/>
                    </MenuFlyout>
                </TreeViewItem.ContextFlyout>
                <StackPanel Orientation="Horizontal">
                    <Image Width="20"
                           Source="../Assets/folder.png"/>
                    <TextBlock Margin="0,0,10,0"/>
                    <TextBlock Text="{Binding Name}" />
                </StackPanel>
            </TreeViewItem>
        </DataTemplate>

        <DataTemplate x:Name="FileTemplate">
            <TreeViewItem HorizontalAlignment="Stretch"
                          Padding="0 0 10 0"
                          IsDoubleTapEnabled="True"
                          DoubleTapped="Password_DoubleTapped"
                          HorizontalContentAlignment="Stretch"
                          AutomationProperties.Name="{Binding Name}"
                          Visibility="{Binding IsVisible, Converter={StaticResource BoolToVisibilityConvereter}}">
                
                <TreeViewItem.ContextFlyout>
                    <MenuFlyout >
                        <MenuFlyoutItem x:Name="SeePassword_PasswordContextMenuItem" Text="{loc:StringResource Key=SeePassword}" Click="SeeContextMenuItem_Click">
                            <MenuFlyoutItem.Icon>
                                <FontIcon Glyph="&#xE7B3;"/>
                            </MenuFlyoutItem.Icon>
                        </MenuFlyoutItem>
                        <MenuFlyoutItem x:Name="EditPassword_PasswordContextMenuItem" Text="{loc:StringResource Key=Edit}" Icon="Edit" Click="EditContextMenuItem_Click"/>
                        <MenuFlyoutItem x:Name="DeletePassword_PasswordContextMenuItem" Text="{loc:StringResource Key=Delete}" Icon="Delete" Click="DeleteContextMenuItem_Click"/>
                        <MenuFlyoutSeparator/>
                        <MenuFlyoutItem x:Name="CopyPassword_PasswordContextMenuItem" Text="{loc:StringResource Key=CopyPassword}" Icon="Copy" Click="CopyPassword_PasswordContextMenuItem_Click"/>
                    </MenuFlyout>
                </TreeViewItem.ContextFlyout>
                <Grid HorizontalAlignment="Stretch">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <FontIcon Glyph="&#xE8D7;"
                              Margin="5,2"
                              FontSize="{StaticResource FontIconSize}"/>

                    <TextBlock Grid.Column="1" 
                               Text="{Binding Name}"
                               VerticalAlignment="Center"/>

                    <StackPanel Grid.Column="2"
                                Orientation="Horizontal"
                                HorizontalAlignment="Right">
                        <TextBlock x:Name="proxy" attachedprops:AncestorSource.AncestorType="TreeView" />
                        <Button Margin="2"
                                CommandParameter="{Binding}"
                                ToolTipService.ToolTip="{loc:StringResource Key=CopyPassword}"
                                Command="{Binding DataContext.DataContext.CopyPasswordToClipboardCommand, ElementName=proxy}">
                            <FontIcon Glyph="&#xE8C8;"
                                      FontSize="{StaticResource FontIconSize}"/>
                        </Button>
                        <Button Margin="2"
                                CommandParameter="{Binding}"
                                ToolTipService.ToolTip="{loc:StringResource Key=SeePassword}"
                                Command="{Binding DataContext.DataContext.SeePasswordCommand, ElementName=proxy}">
                            <FontIcon Glyph="&#xE7B3;"
                                      FontSize="{StaticResource FontIconSize}"/>
                        </Button>
                    </StackPanel>
                </Grid>
            </TreeViewItem>
        </DataTemplate>

        <templateselectors:PasswordExplorerItemTemplateSelector x:Name="PasswordExplorerItemTemplateSelector"
                                                                FolderTemplate="{StaticResource FolderTemplate}"
                                                                FileTemplate="{StaticResource FileTemplate}" />
    </Page.Resources>
    
    <Grid x:Name="RootGrid">
        <Pivot x:Name="PasswordsIndex_Pivot">
            <Pivot.HeaderTemplate>
                <DataTemplate>
                    <StackPanel Width="0"
                                Height="0">
                        <TextBlock Text="{Binding}" />
                    </StackPanel>
                </DataTemplate>
            </Pivot.HeaderTemplate>

            <PivotItem Margin="0, -65, 0, 0">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <TextBlock Margin="20" 
                               Text="{loc:StringResource Key=MyPasswords}"
                               Style="{StaticResource HeaderTextBlockStyle}"/>

                    <Grid Grid.Row="1">

                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>

                        <Grid Margin="15, 0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>

                            <controls:SearchTextBox MinWidth="300"
                                                    VerticalAlignment="Center"
                                                    HorizontalAlignment="Stretch"
                                                    SearchCommand="{Binding Path=SearchCommand}"
                                                    Text="{Binding Path=SearchText, Mode=TwoWay}"
                                                    PlaceholderText="{loc:StringResource Key=SearchPasswords}"
                                                    Visibility="{Binding Path=ShowInitialScreen, Converter={StaticResource BoolToVisibilityConvereter}, ConverterParameter=reverse}"/>

                            <CommandBar IsOpen="False"
                                        Grid.Column="1" 
                                        Background="Transparent"
                                        DefaultLabelPosition="Right"
                                        Visibility="{Binding Path=ShowInitialScreen, Converter={StaticResource BoolToVisibilityConvereter}, ConverterParameter=reverse}">

                                <AppBarButton Icon="Add" 
                                              LabelPosition="Collapsed"
                                              Command="{Binding Path=CreatePasswordCommand}"
                                              ToolTipService.ToolTip="{loc:StringResource Key=AddNewPassword}"/>

                                <AppBarButton Icon="NewFolder" 
                                              LabelPosition="Collapsed"
                                              Command="{Binding Path=CreateCatalogCommand}"
                                              ToolTipService.ToolTip="{loc:StringResource Key=AddNewCatalog}"/>

                                <AppBarButton Icon="Edit" 
                                              LabelPosition="Collapsed"
                                              Command="{Binding Path=EditPasswordCommand}"
                                              CommandParameter="{Binding SelectedItem}"
                                              ToolTipService.ToolTip="{loc:StringResource Key=Edit}"/>
                                
                                <AppBarButton Icon="Delete" 
                                              LabelPosition="Collapsed"
                                              Command="{Binding Path=DeleteCommand}"
                                              CommandParameter="{Binding SelectedItem}"
                                              ToolTipService.ToolTip="{loc:StringResource Key=Delete}"/>
                                
                                <AppBarSeparator />

                                <AppBarButton Icon="Refresh" 
                                              LabelPosition="Collapsed"
                                              Command="{Binding Path=UpdateListCommand}"
                                              ToolTipService.ToolTip="{loc:StringResource Key=UpdatePasswordList}"/>
                            </CommandBar>
                        </Grid>

                        <Grid Grid.Row="1"
                              Margin="10"
                              Visibility="{Binding Path=ShowInitialScreen, Converter={StaticResource BoolToVisibilityConvereter}, ConverterParameter=reverse, FallbackValue=Collapsed}">
                            <TreeView x:Name="PasswordsTreeView" 
                                      ItemsSource="{Binding Path=Passwords}"                                      
                                      ItemContainerStyle="{StaticResource MUX_TreeViewItemStyle}"
                                      ItemTemplateSelector="{StaticResource PasswordExplorerItemTemplateSelector}"
                                      Visibility="{Binding Path=HasPasswords, Converter={StaticResource BoolToVisibilityConvereter}, FallbackValue=Visible}">
                                
                            </TreeView>

                            <TextBlock Text="{loc:StringResource Key=NoPasswordsFound}"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       Visibility="{Binding Path=HasPasswords, Converter={StaticResource BoolToVisibilityConvereter}, ConverterParameter=reverse, FallbackValue=Visible}"/>
                        </Grid>
                    </Grid>

                    <Grid Grid.Row="1"
                          Visibility="{Binding Path=ShowInitialScreen, Converter={StaticResource BoolToVisibilityConvereter}, FallbackValue=Collapsed}">
                        <StackPanel Orientation="Vertical"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Center">

                            <TextBlock Text="{loc:StringResource Key=NoPasswordsYet}" 
                                       HorizontalAlignment="Center"/>
                            <StackPanel Orientation="Horizontal">
                                <Button Margin="10" 
                                        Content="{loc:StringResource Key=AddPassword}"
                                        HorizontalAlignment="Center"
                                        Style="{StaticResource AccentButtonStyle}"
                                        Command="{Binding Path=CreatePasswordCommand}"/>

                                <TextBlock Margin="5" 
                                           VerticalAlignment="Center"
                                           Text="{loc:StringResource Key=Or}"/>

                                <Button Margin="10" 
                                        Content="{loc:StringResource Key=AddNewCatalog}"
                                        HorizontalAlignment="Center"
                                        Style="{StaticResource AccentButtonStyle}"
                                        Command="{Binding Path=CreateCatalogCommand}"/>
                            </StackPanel>

                        </StackPanel>
                    </Grid>
                </Grid>
            </PivotItem>

            <PivotItem>
                <views:EditPasswordView />
            </PivotItem>
        </Pivot>
    </Grid>
</abstract:PageBase>
